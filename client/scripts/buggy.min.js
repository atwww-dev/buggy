/**
 * Buggy - Bug Reporting Tool v1.0.0
 * https://github.com/yourusername/buggy
 * Licensed under MIT
 */
var BuggyExports=(()=>{var v=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var E=Object.getOwnPropertyNames;var T=Object.prototype.hasOwnProperty;var M=(a,t)=>{for(var e in t)v(a,e,{get:t[e],enumerable:!0})},L=(a,t,e,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of E(t))!T.call(a,r)&&r!==e&&v(a,r,{get:()=>t[r],enumerable:!(o=S(t,r))||o.enumerable});return a};var B=a=>L(v({},"__esModule",{value:!0}),a);var z={};M(z,{Buggy:()=>m,default:()=>R});var f=class{constructor(){this.currentTool="pen",this.currentColor="#000000",this.isDrawing=!1,this.lastX=0,this.lastY=0,this.scale=1,this.offsetX=0,this.offsetY=0,this.isDragging=!1,this.dragStart={x:0,y:0}}async show(t){return new Promise((e,o)=>{this.showAnnotationTool(t,e,o)})}showAnnotationTool(t,e,o){let r=document.createElement("div");r.className="buggy-annotation-container",r.innerHTML=`
      <div class="buggy-annotation-modal">
        <div class="buggy-toolbar">
          <div class="buggy-tools">
            <button class="buggy-tool active" data-tool="pen" title="Pen Tool">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M17 3a2.85 2.85 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z"></path>
              </svg>
            </button>
            <button class="buggy-tool" data-tool="arrow" title="Arrow Tool">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <line x1="5" y1="12" x2="19" y2="12"></line>
                <polyline points="12 5 19 12 12 19"></polyline>
              </svg>
            </button>
            <button class="buggy-tool" data-tool="rectangle" title="Rectangle Tool">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
              </svg>
            </button>
            <button class="buggy-tool" data-tool="text" title="Text Tool">
              <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                <path d="M17 9V5H7v4"></path>
                <path d="M12 12v8"></path>
                <path d="M7 9h10"></path>
              </svg>
            </button>
          </div>
          <div class="buggy-colors">
            <button class="buggy-color active" data-color="#000000" style="background: #000000;"></button>
            <button class="buggy-color" data-color="#ff0000" style="background: #ff0000;"></button>
            <button class="buggy-color" data-color="#0000ff" style="background: #0000ff;"></button>
          </div>
          <div class="buggy-actions">
            <button class="buggy-clear">Clear</button>
            <button class="buggy-done">Continue</button>
          </div>
        </div>
        <div class="buggy-canvas-wrapper">
          <canvas id="buggy-canvas"></canvas>
        </div>
        <div class="buggy-text-modal" style="display: none;">
          <div class="buggy-text-modal-content">
            <h3>Add Text</h3>
            <textarea id="buggy-text-input" placeholder="Enter text..."></textarea>
            <div class="buggy-text-modal-actions">
              <button class="buggy-text-cancel">Cancel</button>
              <button class="buggy-text-add">Add Text</button>
            </div>
          </div>
        </div>
      </div>
    `,document.body.appendChild(r);let i=r.querySelector("#buggy-canvas"),d=i.getContext("2d"),c=r.querySelector(".buggy-text-modal"),p=r.querySelector("#buggy-text-input"),s=new Image;s.onload=()=>{let g=Math.min(window.innerWidth*.85,s.width),h=Math.min(window.innerHeight*.75,s.height),x=s.width/s.height,b,n;s.width>g?(b=g,n=g/x):s.height>h?(n=h,b=h*x):(b=s.width,n=s.height),i.width=Math.round(b),i.height=Math.round(n),this.render(d,s),this.initializeDrawing(i,r,s,e)},s.onerror=()=>o(new Error("Failed to load screenshot")),s.src=t}render(t,e){let o=t.canvas;t.clearRect(0,0,o.width,o.height),t.drawImage(e,0,0,o.width,o.height)}initializeDrawing(t,e,o,r){let i=t.getContext("2d"),d=e.querySelector(".buggy-text-modal"),c=e.querySelector("#buggy-text-input"),p=e.querySelector(".buggy-text-add"),s=e.querySelector(".buggy-text-cancel"),g=0,h=0;e.querySelectorAll(".buggy-tool").forEach(n=>{n.addEventListener("click",l=>{e.querySelectorAll(".buggy-tool").forEach(u=>u.classList.remove("active")),l.target.closest(".buggy-tool").classList.add("active"),this.currentTool=l.target.closest(".buggy-tool").dataset.tool})}),e.querySelectorAll(".buggy-color").forEach(n=>{n.addEventListener("click",l=>{e.querySelectorAll(".buggy-color").forEach(u=>u.classList.remove("active")),l.target.classList.add("active"),this.currentColor=l.target.dataset.color})}),p.addEventListener("click",()=>{let n=c.value.trim();n&&(i.fillStyle=this.currentColor,i.font="16px Arial",i.fillText(n,g,h)),d.style.display="none",c.value=""}),s.addEventListener("click",()=>{d.style.display="none",c.value=""});let x=n=>{let l=t.getBoundingClientRect();return{x:n.clientX-l.left,y:n.clientY-l.top}},b=n=>{if(!this.isDrawing)return;let{x:l,y:u}=x(n);switch(i.strokeStyle=this.currentColor,i.fillStyle=this.currentColor,i.lineWidth=2,i.lineCap="round",this.currentTool){case"pen":i.beginPath(),i.moveTo(this.lastX,this.lastY),i.lineTo(l,u),i.stroke();break;case"arrow":this.render(i,o),this.drawArrow(i,this.lastX,this.lastY,l,u);break;case"rectangle":this.render(i,o),this.drawRectangle(i,this.lastX,this.lastY,l,u);break}[this.lastX,this.lastY]=[l,u]};t.addEventListener("mousedown",n=>{if(n.button!==0)return;this.isDrawing=!0;let{x:l,y:u}=x(n);[this.lastX,this.lastY]=[l,u],this.currentTool==="text"&&(this.isDrawing=!1,g=l,h=u,d.style.display="flex",c.focus())}),t.addEventListener("mousemove",b),t.addEventListener("mouseup",()=>{if(this.isDrawing){this.isDrawing=!1;let n=document.createElement("canvas");n.width=t.width,n.height=t.height,n.getContext("2d").drawImage(t,0,0),o.src=n.toDataURL()}}),t.addEventListener("mouseout",()=>{this.isDrawing=!1}),e.querySelector(".buggy-clear").addEventListener("click",()=>{this.render(i,o)}),e.querySelector(".buggy-done").addEventListener("click",()=>{let n=t.toDataURL("image/png");document.body.removeChild(e),r(n)})}drawArrow(t,e,o,r,i){let c=Math.atan2(i-o,r-e);t.beginPath(),t.moveTo(e,o),t.lineTo(r,i),t.stroke(),t.beginPath(),t.moveTo(r,i),t.lineTo(r-10*Math.cos(c-Math.PI/6),i-10*Math.sin(c-Math.PI/6)),t.lineTo(r-10*Math.cos(c+Math.PI/6),i-10*Math.sin(c+Math.PI/6)),t.closePath(),t.fill()}drawRectangle(t,e,o,r,i){t.strokeRect(Math.min(e,r),Math.min(o,i),Math.abs(r-e),Math.abs(i-o))}};var w=class{constructor(t){this.apiUrl=t}show(t){return new Promise((e,o)=>{let r=document.createElement("div");r.className="buggy-form-container",r.innerHTML=`
        <div class="buggy-form-modal">
          <h2>Report a Bug</h2>
          <form class="buggy-form">
            <div class="buggy-form-group">
              <label for="buggy-title">Title</label>
              <input type="text" id="buggy-title" name="title" required placeholder="Brief description of the bug">
            </div>
            <div class="buggy-form-group">
              <label for="buggy-category">Category</label>
              <select id="buggy-category" name="category" required>
                <option value="ui">UI Issue</option>
                <option value="functionality">Functionality</option>
                <option value="performance">Performance</option>
                <option value="other">Other</option>
              </select>
            </div>
            <div class="buggy-form-group">
              <label for="buggy-priority">Priority</label>
              <select id="buggy-priority" name="priority" required>
                <option value="low">Low</option>
                <option value="medium">Medium</option>
                <option value="high">High</option>
                <option value="critical">Critical</option>
              </select>
            </div>
            <div class="buggy-form-group">
              <label for="buggy-description">Description</label>
              <textarea id="buggy-description" name="description" required placeholder="Please describe the issue in detail"></textarea>
            </div>
            <div class="buggy-form-group">
              <label for="buggy-steps">Steps to Reproduce</label>
              <textarea id="buggy-steps" name="steps" required placeholder="1. Go to page&#10;2. Click on...&#10;3. Observe that..."></textarea>
            </div>
            <div class="buggy-form-preview">
              <img src="${t}" alt="Bug Screenshot" style="max-width: 100%; height: auto;">
            </div>
            <div class="buggy-form-actions">
              <button type="button" class="buggy-cancel">Cancel</button>
              <button type="submit" class="buggy-submit">Submit Report</button>
            </div>
          </form>
        </div>
      `,document.body.appendChild(r);let i=r.querySelector(".buggy-form"),d=r.querySelector(".buggy-cancel");i.addEventListener("submit",async c=>{c.preventDefault();try{let p=i.querySelector(".buggy-submit"),s=p.textContent;p.disabled=!0,p.textContent="Submitting...";let g=new FormData(i),h=t;t&&(t.startsWith("data:image/")||(h=`data:image/png;base64,${t}`));let x={title:g.get("title"),description:g.get("description"),category:g.get("category"),priority:g.get("priority"),steps:g.get("steps"),screenshot:h,url:window.location.href,browser:this.getBrowserInfo()},b=await fetch(this.apiUrl,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(x)});if(!b.ok){let l=await b.text();throw new Error(`Failed to submit bug report: ${l}`)}let n=await b.json();document.body.removeChild(r),e(n)}catch(p){console.error("Error submitting bug report:",p);let s=document.createElement("div");s.className="buggy-form-error",s.textContent=p.message||"Failed to submit bug report. Please try again.",i.insertBefore(s,i.firstChild);let g=i.querySelector(".buggy-submit");g&&(g.disabled=!1,g.textContent="Try Again"),o(p)}}),d.addEventListener("click",()=>{document.body.removeChild(r),o(new Error("Bug report cancelled"))})})}getBrowserInfo(){let t=navigator.userAgent,e="Unknown",o="";return t.includes("Firefox/")?(e="Firefox",o=t.split("Firefox/")[1]):t.includes("Chrome/")?(e="Chrome",o=t.split("Chrome/")[1].split(" ")[0]):t.includes("Safari/")&&!t.includes("Chrome")?(e="Safari",o=t.split("Version/")[1].split(" ")[0]):t.includes("Edge/")&&(e="Edge",o=t.split("Edge/")[1]),`${e} ${o}`}};async function k(){try{try{let a=await navigator.mediaDevices.getDisplayMedia({preferCurrentTab:!0,video:{width:window.innerWidth,height:window.innerHeight}});if(!a||a.getVideoTracks().length===0)throw new Error("Screen capture cancelled or no video tracks available");let t=a.getVideoTracks()[0];y("Captured current view. Processing...","info"),await new Promise(d=>setTimeout(d,500));let o=await new ImageCapture(t).grabFrame(),r=document.createElement("canvas");return r.width=o.width,r.height=o.height,r.getContext("2d").drawImage(o,0,0),t.stop(),a.getTracks().forEach(d=>d.stop()),r.toDataURL("image/png")}catch(a){if(console.error("Error with getDisplayMedia:",a),a.name==="NotAllowedError"||a.name==="AbortError"||a.message.includes("cancel")||a.message.includes("denied"))throw y("Screenshot cancelled. Bug report aborted.","info"),new Error("SCREENSHOT_CANCELLED");y("Unable to capture screenshot. Please describe the issue instead.","error");let t=document.createElement("canvas");t.width=window.innerWidth,t.height=window.innerHeight;let e=t.getContext("2d");return e.fillStyle="#f5f5f5",e.fillRect(0,0,t.width,t.height),e.fillStyle="#333",e.font="16px Arial",e.textAlign="center",e.fillText("Screenshot capture unavailable",t.width/2,t.height/2),t.toDataURL("image/png")}}catch(a){throw console.error("Error capturing screenshot:",a),a}}function C(){let a="buggy-styles";if(document.getElementById(a))return;let t=document.createElement("style");t.id=a,t.textContent=`
    .buggy-button {
      position: fixed;
      z-index: 10000;
      bottom: 30px;
      right: 0;
      padding: 8px 14px 8px 16px;
      border-radius: 30px 0 0 30px;
      background: #3a3a3a;
      color: white;
      border: none;
      cursor: pointer;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      box-shadow: 0 2px 8px rgba(0,0,0,0.2);
      transition: all 0.3s ease;
      font-size: 13px;
      font-weight: 500;
      display: flex;
      align-items: center;
      gap: 6px;
    }
    .buggy-button::before {
      content: '';
      display: inline-block;
      width: 10px;
      height: 10px;
      border-radius: 50%;
      background-color: #ff5252;
      margin-right: 2px;
    }
    .buggy-button:hover {
      padding-right: 20px;
      background: #444;
      transform: translateX(-5px);
      box-shadow: 2px 2px 10px rgba(0,0,0,0.25);
    }
    
    /* Info screen styles */
    .buggy-info-container {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(0,0,0,0.85);
      z-index: 10001;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 20px;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    }
    
    .buggy-info-modal {
      background: white;
      border-radius: 8px;
      padding: 30px;
      max-width: 500px;
      width: 100%;
      box-shadow: 0 10px 25px rgba(0,0,0,0.3);
    }
    
    .buggy-info-modal h2 {
      font-size: 24px;
      margin-bottom: 20px;
      color: #000;
    }
    
    .buggy-info-modal p {
      margin-bottom: 16px;
      line-height: 1.5;
      color: #333;
    }
    
    .buggy-info-modal ul {
      margin-bottom: 20px;
      padding-left: 20px;
    }
    
    .buggy-info-modal li {
      margin-bottom: 8px;
      color: #333;
    }
    
    .buggy-info-actions {
      display: flex;
      justify-content: flex-end;
      margin-top: 20px;
    }
    
    .buggy-info-continue {
      background: #000;
      color: white;
      border: none;
      padding: 10px 20px;
      border-radius: 4px;
      cursor: pointer;
      font-size: 14px;
      transition: all 0.2s ease;
    }
    
    .buggy-info-continue:hover {
      background: #333;
    }

    /* Annotation tool styles */
    .buggy-annotation-container {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(0,0,0,0.7);
      z-index: 10001;
      display: flex;
      align-items: center;
      justify-content: center;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    }
    
    .buggy-annotation-modal {
      background: white;
      border-radius: 8px;
      overflow: hidden;
      display: flex;
      flex-direction: column;
      max-width: 90%;
      max-height: 90%;
      width: auto;
      box-shadow: 0 5px 25px rgba(0,0,0,0.25);
    }

    .buggy-toolbar {
      background: #f8f8f8;
      padding: 8px 12px;
      display: flex;
      gap: 10px;
      align-items: center;
      border-bottom: 1px solid #eee;
      flex-wrap: wrap;
    }

    .buggy-tools, .buggy-colors, .buggy-actions {
      display: flex;
      gap: 5px;
      align-items: center;
    }
    
    .buggy-tool {
      width: 32px;
      height: 32px;
      border: 1px solid #ddd;
      border-radius: 4px;
      cursor: pointer;
      background: white;
      display: flex;
      align-items: center;
      justify-content: center;
      transition: all 0.2s ease;
      padding: 0;
    }

    .buggy-tool:hover {
      background: #f0f0f0;
    }

    .buggy-tool.active {
      background: #000;
      color: white;
      border-color: #000;
    }

    .buggy-color {
      width: 24px;
      height: 24px;
      padding: 0;
      border: 2px solid #fff;
      box-shadow: 0 0 0 1px #ddd;
      border-radius: 50%;
      cursor: pointer;
      transition: transform 0.2s ease;
    }
    
    .buggy-color.active {
      transform: scale(1.2);
      box-shadow: 0 0 0 2px #000;
    }

    .buggy-canvas-wrapper {
      position: relative;
      padding: 0;
      display: flex;
      justify-content: center;
      overflow: auto;
      background: #e5e5e5;
      max-height: calc(90vh - 60px);
    }

    #buggy-canvas {
      background: white;
      cursor: crosshair;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
      display: block;
      max-width: 100%;
      max-height: 100%;
    }
    
    .buggy-actions {
      margin-left: auto;
    }

    .buggy-clear, .buggy-done {
      padding: 6px 12px;
      border-radius: 4px;
      border: none;
      cursor: pointer;
      font-size: 13px;
      transition: all 0.2s ease;
    }
    
    .buggy-clear {
      background: #f0f0f0;
      border: 1px solid #ddd;
      color: #333;
    }
    
    .buggy-clear:hover {
      background: #e7e7e7;
    }

    .buggy-done {
      background: #000;
      color: white;
    }
    
    .buggy-done:hover {
      background: #333;
    }
    
    /* Text input modal */
    .buggy-text-modal {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(0,0,0,0.7);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 10002;
    }
    
    .buggy-text-modal-content {
      background: white;
      padding: 20px;
      border-radius: 8px;
      width: 90%;
      max-width: 350px;
      box-shadow: 0 5px 25px rgba(0,0,0,0.3);
    }
    
    .buggy-text-modal-content h3 {
      margin-top: 0;
      margin-bottom: 15px;
      font-size: 16px;
      color: #000;
    }
    
    #buggy-text-input {
      width: 100%;
      height: 80px;
      padding: 8px;
      border: 1px solid #ddd;
      border-radius: 4px;
      resize: vertical;
      font-family: inherit;
      font-size: 14px;
      margin-bottom: 15px;
    }
    
    .buggy-text-modal-actions {
      display: flex;
      gap: 10px;
      justify-content: flex-end;
    }
    
    .buggy-text-cancel, .buggy-text-add {
      padding: 6px 12px;
      border-radius: 4px;
      border: none;
      cursor: pointer;
      font-size: 13px;
    }
    
    .buggy-text-cancel {
      background: #f0f0f0;
      border: 1px solid #ddd;
      color: #333;
    }
    
    .buggy-text-add {
      background: #000;
      color: white;
    }

    /* Form styles */
    .buggy-form-container {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background: rgba(0,0,0,0.7);
      z-index: 10001;
      display: flex;
      align-items: center;
      justify-content: center;
      padding: 20px;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    }

    .buggy-form-modal {
      background: white;
      padding: 25px;
      border-radius: 8px;
      width: 100%;
      max-width: 550px;
      max-height: 90vh;
      overflow-y: auto;
      box-shadow: 0 5px 25px rgba(0,0,0,0.25);
    }
    
    .buggy-form-modal h2 {
      margin-top: 0;
      margin-bottom: 20px;
      font-size: 20px;
      color: #000;
    }

    .buggy-form {
      display: flex;
      flex-direction: column;
      gap: 18px;
    }

    .buggy-form-group {
      display: flex;
      flex-direction: column;
      gap: 6px;
    }

    .buggy-form-group label {
      font-weight: 600;
      color: #333;
      font-size: 13px;
    }

    .buggy-form-group input,
    .buggy-form-group textarea,
    .buggy-form-group select {
      padding: 8px 10px;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-size: 14px;
      line-height: 1.5;
      transition: border-color 0.2s ease;
    }
    
    .buggy-form-group input:focus,
    .buggy-form-group textarea:focus,
    .buggy-form-group select:focus {
      border-color: #000;
      outline: none;
    }

    .buggy-form-group textarea {
      min-height: 100px;
      resize: vertical;
    }

    .buggy-form-error {
      background-color: #ffebee;
      border: 1px solid #ffcdd2;
      color: #c62828;
      padding: 10px 15px;
      margin-bottom: 15px;
      border-radius: 4px;
      font-size: 14px;
      line-height: 1.5;
    }

    .buggy-form-preview {
      margin-top: 10px;
      border: 1px solid #eee;
      border-radius: 4px;
      padding: 10px;
      background: #f8f8f8;
    }
    
    .buggy-form-preview img {
      display: block;
      max-width: 100%;
      height: auto;
      border-radius: 2px;
      box-shadow: 0 1px 3px rgba(0,0,0,0.1);
    }

    .buggy-form-actions {
      display: flex;
      gap: 10px;
      justify-content: flex-end;
      margin-top: 15px;
    }

    .buggy-submit, .buggy-cancel {
      padding: 8px 16px;
      border-radius: 4px;
      border: none;
      cursor: pointer;
      font-size: 13px;
      transition: all 0.2s ease;
    }

    .buggy-submit {
      background: #000;
      color: white;
    }
    
    .buggy-submit:hover {
      background: #333;
    }

    .buggy-cancel {
      background: #f0f0f0;
      border: 1px solid #ddd;
      color: #333;
    }
    
    .buggy-cancel:hover {
      background: #e7e7e7;
    }
    
    /* Message notification */
    .buggy-message {
      position: fixed;
      bottom: 20px;
      right: 20px;
      padding: 10px 16px;
      border-radius: 4px;
      background: rgba(0,0,0,0.8);
      color: white;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      font-size: 13px;
      box-shadow: 0 3px 10px rgba(0,0,0,0.2);
      z-index: 10002;
      animation: buggy-slide-in 0.3s ease;
    }
    
    @keyframes buggy-slide-in {
      from { transform: translateY(20px); opacity: 0; }
      to { transform: translateY(0); opacity: 1; }
    }
    
    @keyframes buggy-slide-out {
      from { transform: translateY(0); opacity: 1; }
      to { transform: translateY(20px); opacity: 0; }
    }
    
    /* Responsive styles */
    @media (max-width: 768px) {
      .buggy-annotation-modal,
      .buggy-form-modal,
      .buggy-text-modal-content {
        width: 95%;
      }
      
      .buggy-toolbar {
        flex-wrap: wrap;
      }
    }
  `,document.head.appendChild(t)}function y(a,t="info"){document.querySelectorAll(".buggy-message").forEach(r=>{document.body.removeChild(r)});let o=document.createElement("div");o.className="buggy-message",o.textContent=a,document.body.appendChild(o),setTimeout(()=>{o.style.animation="buggy-slide-out 0.3s ease forwards",setTimeout(()=>{document.body.contains(o)&&document.body.removeChild(o)},300)},3e3)}var m=class{constructor(t={}){this.apiUrl=t.apiUrl||"/api/feedback",this.buttonText=t.buttonText||"Report Bug",this.buttonPosition=t.buttonPosition||{bottom:"20px",right:"20px"},this.annotationTool=new f,this.bugReportForm=new w(this.apiUrl)}initialize(){C(),this.createButton()}createButton(){let t=document.createElement("button");t.className="buggy-button",t.textContent=this.buttonText,Object.assign(t.style,this.buttonPosition),t.addEventListener("click",()=>this.startBugReport()),document.body.appendChild(t)}async startBugReport(){try{let t;try{t=await k(),y("Screenshot captured successfully")}catch(r){if(r.message==="SCREENSHOT_CANCELLED")return null;throw r}let e=await this.annotationTool.show(t);y("Annotations saved");let o=await this.bugReportForm.show(e);return y("Bug report submitted successfully"),o}catch(t){throw t.message==="Bug report cancelled"?y("Bug report cancelled","info"):t.message==="SCREENSHOT_CANCELLED"||(console.error("Error in bug reporting flow:",t),y("Failed to complete bug report","error")),t}}};var R=m;typeof window<"u"&&(window.Buggy=m);return B(z);})();
window.Buggy = BuggyExports.Buggy;
